NODEJS-LOGIC-SERVER

# 개발환경
- Node.js : v4.4.3
- Mongo : v3.4
- Redis : v3.2.6
- npm : v2.15.1
- npm packages : "dependencies": {   "bluebird": "^3.4.7",   "body-parser": "^1.16.0",   "debug": "^2.6.0",   "express": "^4.14.0",   "mongoose": "^4.7.7",   "promise": "^7.1.1",   "redis": "^2.6.5",   "redis-promise": "^0.1.0" }

# APIs
/api/v1/users/:user_id/add_friend/:friend_id : GET
두 유저가 친구관계가 되었음을 웹 서버로부터 전달받고 그래프에 유저관계 간선을 추가한다.

/api/v1/users/:user_id/friend : POST
그래프로 부터 친구추천 리스트를 계산하고 레디스에 목록을 저장한다.
set.friend.recommendation.js 호출

/api/v1/users/:user_id/friends :GET
레디스에 저장된 친구 추천 리스트를 읽어와서 클라이언트로 보내준다.
/controllers/get.friend.recommendation.js 호출

/api/v1/users/:user_id/create_article/:article_id/tag/:tag_id :GET
한 유저가 글을 게시 하였을 때 그래프 알고리즘을 통해 전달하고자 하는 유저를 키로하는 레디스 뉴스피드 리스트에 추가해준다.
push.newsfeed.article.js 호출

/api/v1/users/:user_id/sign_up :GET
유저가 회원가입을 하면 그래프에 유저 노드를 추가한다.

/api/v1/users/:user_id/follow/:arture_id : GET
유저가 아처를 팔로우 하면 그래프에 간선을 추가한다.

/api/v1/users/:user_id/arture_reco : GET
한 유저에 해당하는 아처(컨텐츠)추천목록을 JSON 형태로 보내준다.
get.arture.recommendation.js 호출

/api/v1/users/:user_id/newsfeed : GET
한 유저의 뉴스피드 목록을 레디스에서 읽어서 JSON형태로 보내준다.
get.newsfeed.js 호출



# 프로젝트 구조

models : 데이터베이스 콜랙션의 스키마 정의
- User
- Article
- Arture

routes : 각 API를 처리하는 라우트

events :  javasctipt의 이벤트 관리

util : 그래프, 큐, bfs, dijkstra 등 기본 자료구조 정의


controllers : 서버에서 처리하게 될 추천로직 정의
- controller.handler.js : 컨트롤러의 모든 기능을 모아서 관리
- server.init
	- init.newsfeed.js : 서버 로딩 시 디비를 읽어서 각 유저 뉴스피드 초기화
	- init.friend.reco.js : 서버 로딩 시 디비를 읽어서 각 유저 친구추천목록 초					기화
	- init.graph.js : 서버 로딩 시 디비를 읽어서 그래프 생성
	- init.redis.js : 유저의 간단 프로필을 레디스에 저장

- get.friend.recommendation.js :  친구추천 목록 반환
- push.newsfeed.article.js : 게시글 푸시
- set.friend.recommendation.js : 친구추천 목록 레디스 저장
- graph.add.follow.js : 팔로우 관계 추가
- get.arture.recommendation.js : 컨텐츠 추천목록 반환

config
여러 설정값들을 정의
